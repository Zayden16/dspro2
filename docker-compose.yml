services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - POSTGRES_URL=${POSTGRES_URL}
        - NEXTAUTH_URL=${NEXTAUTH_URL}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
        - S3_ACCESS_KEY=${S3_ACCESS_KEY}
        - S3_SECRET_KEY=${S3_SECRET_KEY}
        - S3_BUCKET_NAME=${S3_BUCKET_NAME}
        - S3_REGION=${S3_REGION}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - minio
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_REGION=${S3_REGION}
    restart: always

  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
    command: server --console-address ":9001" /data
    restart: always

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      /usr/bin/mc mb myminio/${S3_BUCKET_NAME};
      /usr/bin/mc policy set public myminio/${S3_BUCKET_NAME};
      exit 0;
      "

volumes:
  postgres_data:
  minio_data:
